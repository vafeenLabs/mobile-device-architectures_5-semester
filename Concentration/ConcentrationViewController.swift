import UIKit

class ConcentrationViewController: UIViewController {
    
    // –¢–∞–π–º–µ—Ä –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–æ–∫
    private var hintTimer: Timer? 
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–∞—Ä –∫–∞—Ä—Ç
    private lazy var game = Concentration(numberOfPairsOfCards: numberOfPairesOfCards) 
    
    // –°—á—ë—Ç—á–∏–∫ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç
    private (set) var flipCount = 0 { 
        didSet { 
            updateFlipCountLabel() // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫—É —Å—á—ë—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è
        } 
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫—É —Å—á—ë—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç
    private func updateFlipCountLabel() { 
        let attributes: [NSAttributedString.Key: Any] = [:] // –°–æ–∑–¥–∞—ë–º –∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è —Å—Ç—Ä–æ–∫–∏
        let attributedString = NSAttributedString(string: " Flips: \(flipCount) ", attributes: attributes) // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç
        flipCountLabel.attributedText = attributedString // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –º–µ—Ç–∫—É —Å—á—ë—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç
    }
    
    // –°—á—ë—Ç—á–∏–∫ –æ—á–∫–æ–≤
    private (set) var scoreCount = 0 { 
        didSet { 
            updateScoreCountLabel() // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫—É —Å—á—ë—Ç—á–∏–∫–∞ –æ—á–∫–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è
        } 
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫—É —Å—á—ë—Ç—á–∏–∫–∞ –æ—á–∫–æ–≤
    private func updateScoreCountLabel() { 
        let attributes: [NSAttributedString.Key: Any] = [:] // –°–æ–∑–¥–∞—ë–º –∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è —Å—Ç—Ä–æ–∫–∏
        let attributedString = NSAttributedString(string: " Score: \(scoreCount) ", attributes: attributes) // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—á–∫–æ–≤
        scoreCountLabel.attributedText = attributedString // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –º–µ—Ç–∫—É —Å—á—ë—Ç—á–∏–∫–∞ –æ—á–∫–æ–≤
    }
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä –∫–∞—Ä—Ç, –∏—Å—Ö–æ–¥—è –∏–∑ —á–∏—Å–ª–∞ –∫–Ω–æ–ø–æ–∫
    var numberOfPairesOfCards: Int { 
        return (cardButtons.count + 1) / 2 // –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä –∫–∞—Ä—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–Ω–æ–ø–æ–∫
    }
    
    @IBOutlet private var cardButtons: [UIButton]! // –ö–Ω–æ–ø–∫–∏ –∫–∞—Ä—Ç, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º —á–µ—Ä–µ–∑ IBOutlet
    
    @IBOutlet private weak var cardButtonsStack: UIStackView! // –°—Ç–µ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—Ç
    
    @IBOutlet private weak var restartButton: UIButton! // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
    
    @IBOutlet private weak var shuffleCardsButton: UIButton! // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç
    
    @IBOutlet weak var hintButton: UIButton! // –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∏
    
    @IBOutlet private weak var flipCountLabel: UILabel! { // –ú–µ—Ç–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç
        didSet { 
            updateFlipCountLabel() // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫—É –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
        } 
    }
    
    @IBOutlet private weak var scoreCountLabel: UILabel! { // –ú–µ—Ç–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á—ë—Ç—á–∏–∫–∞ –æ—á–∫–æ–≤
        didSet { 
            updateScoreCountLabel() // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫—É –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
        } 
    }
    
    private var emojiChoices = "üçìüçáüçëüçéüçâüçãü´êüçíüçèü•≠üçåü••üççü•ùüçêüçäüçàü•ëü´ëü•íüå∂üåΩü•ïü•¨" // –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
    
    private var emoji = [Card: String]() // –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –∏ —ç–º–æ–¥–∑–∏
    
    private var numberOfCards = 8 // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∏–≥—Ä–µ
    
    private var currentTheme: Theme = FruitsTheme() // –¢–µ–º–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    // –£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã
    var difficultyLevel: Difficulty? { 
        didSet { 
            switch difficultyLevel { // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
            case .beginner:
                numberOfCards = 8
            case .medium:
                numberOfCards = 12
            case .master:
                numberOfCards = 24
            default:
                numberOfCards = 12 
            }
            
            if cardButtons != nil {
                updateNumberOfCardButtons() // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
                
                game = Concentration(numberOfPairsOfCards: numberOfPairesOfCards) // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∏–≥—Ä—É
                
                updateViewFromModel() // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –º–æ–¥–µ–ª—å—é –∏–≥—Ä—ã
            }
        } 
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É –∏–≥—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ–º—ã
    func setTheme(themeName: String) { 
        switch themeName {
        case " Fruits ": 
            currentTheme = FruitsTheme() // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É "–§—Ä—É–∫—Ç—ã"
        case " Shapes&Colors ": 
            currentTheme = ShapesAndColorsTheme() // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É "–§–æ—Ä–º—ã –∏ —Ü–≤–µ—Ç–∞"
        case " Flags ": 
            currentTheme = FlagsTheme() // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É "–§–ª–∞–≥–∏"
        default:
            break 
        }
        
        updateUIForTheme() // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã
    func updateUIForTheme() { 
        view.backgroundColor = currentTheme.primaryColor // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
        
        cardButtons.forEach { button in 
            button.backgroundColor = currentTheme.cardColor // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫
            button.layer.borderColor = currentTheme.cardBorderColor // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ä–∞–º–∫–∏ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫
        }
        
        restartButton.layer.backgroundColor = currentTheme.buttonsColor  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
        hintButton.layer.backgroundColor = currentTheme.buttonsColor  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏
        shuffleCardsButton.layer.backgroundColor = currentTheme.buttonsColor  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∏–≥—Ä–µ
    func updateNumberOfCardButtons() {
        if cardButtons != nil {
            cardButtons.removeAll()  // –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö
            
        }
        
        cardButtonsStack.arrangedSubviews.forEach { buttonView in 
            cardButtonsStack.removeArrangedSubview(buttonView)  // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ –∏–∑ —Å—Ç–µ–∫–∞
            buttonView.removeFromSuperview()  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        }

        let rows = Int(numberOfCards / 4)  // –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
        
        let cols = Int(numberOfCards / rows)  // –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
        
        for _ in 1...rows {  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç–µ–∫ –ø–æ —Å—Ç—Ä–æ–∫–∞–º
            
            let rowCardStack = UIStackView()  // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Å—Ç–µ–∫ –¥–ª—è —Å—Ç—Ä–æ–∫–∏
            
            rowCardStack.spacing = 10  // –ó–∞–¥–∞—ë–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏
            
            rowCardStack.distribution = UIStackView.Distribution.fillEqually  // –ó–∞–¥–∞—ë–º —Ä–∞–≤–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
            
            for _ in 1...cols {  
                let cardButton = UIButton()  // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É –∫–∞—Ä—Ç–æ—á–∫–∏
                
                cardButton.layer.cornerRadius = 8  // –ó–∞–∫—Ä—É–≥–ª—è–µ–º —É–≥–ª—ã –∫–Ω–æ–ø–∫–∏
                
                cardButton.layer.borderWidth = 2  // –ó–∞–¥–∞—ë–º —à–∏—Ä–∏–Ω—É —Ä–∞–º–∫–∏ –∫–Ω–æ–ø–∫–∏
                
                cardButton.layer.borderColor = currentTheme.cardBorderColor  // –ó–∞–¥–∞—ë–º —Ü–≤–µ—Ç —Ä–∞–º–∫–∏ –∫–Ω–æ–ø–∫–∏
                
                cardButton.addTarget(self, action: #selector(touchCard(_:)), for: .touchUpInside)  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
                
                cardButtons.append(cardButton)  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –º–∞—Å—Å–∏–≤ –∫–∞—Ä—Ç–æ—á–µ–∫
                
                rowCardStack.addArrangedSubview(cardButton)  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Å—Ç–µ–∫ —Å—Ç—Ä–æ–∫–∏
                
            }
            
            cardButtonsStack.addArrangedSubview(rowCardStack)  // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–µ–∫ —Å—Ç—Ä–æ–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–µ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫
            
        }
        
    }

    // –ú–µ—Ç–æ–¥ viewDidLoad –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞.
    // –ó–¥–µ—Å—å –º—ã –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
   override func viewDidLoad() {
   
    super.viewDidLoad() // –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏

    flipCountLabel.backgroundColor = #colorLiteral(red: 1.0, green: 1.0, blue: 1.0, alpha: 1.0)  
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –º–µ—Ç–∫–∏ —Å—á—ë—Ç—á–∏–∫–∞ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç –≤ –±–µ–ª—ã–π

    scoreCountLabel.backgroundColor = #colorLiteral(red: 1.0, green: 1.0, blue: 1.0, alpha: 1.0)  
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –º–µ—Ç–∫–∏ —Å—á—ë—Ç—á–∏–∫–∞ –æ—á–∫–æ–≤ –≤ –±–µ–ª—ã–π

    view.backgroundColor = currentTheme.primaryColor  
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º–æ–π —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã

    updateNumberOfCardButtons()  ¬†// –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–∞ —ç–∫—Ä–∞–Ω–µ

    for card in cardButtons {  
        card.layer.cornerRadius = 8  ¬†// –ó–∞–∫—Ä—É–≥–ª—è–µ–º —É–≥–ª—ã –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ 
    }  

    restartButton.layer.backgroundColor = currentTheme.buttonsColor  ¬†// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–º–æ–π
    hintButton.layer.backgroundColor = currentTheme.buttonsColor  ¬†// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–º–æ–π
    shuffleCardsButton.layer.backgroundColor = currentTheme.buttonsColor  ¬†// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–º–æ–π

    restartButton.layer.cornerRadius = 10  ¬†// –ó–∞–∫—Ä—É–≥–ª—è–µ–º —É–≥–ª—ã –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞
    hintButton.layer.cornerRadius = 10  ¬†// –ó–∞–∫—Ä—É–≥–ª—è–µ–º —É–≥–ª—ã –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞
    shuffleCardsButton.layer.cornerRadius = 10  ¬†// –ó–∞–∫—Ä—É–≥–ª—è–µ–º —É–≥–ª—ã –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞

    updateViewFromModel()  ¬†// –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–∫—É—â–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –º–æ–¥–µ–ª–∏ –∏–≥—Ä—ã
}


   @IBAction private func touchRestartGame(_ sender: UIButton) {  
       game = Concentration(numberOfPairsOfCards: numberOfPairesOfCards)  ¬†// –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –∏–≥—Ä—É —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø–∞—Ä –∫–∞—Ä—Ç–æ—á–µ–∫  
       
       emojiChoices = currentTheme.emojis  ¬†// –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã  
       
       flipCount = 0  ¬†// –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫  
       
       scoreCount = 0  ¬†// –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –æ—á–∫–æ–≤  
       
       emoji = [:]  ¬†// –û—á–∏—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —ç–º–æ–¥–∑–∏  
       
       hintButton.layer.backgroundColor = currentTheme.buttonsColor  ¬†// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏  
       game.flipAllCardsFaceDown()
       
       updateViewFromModel()  ¬†// –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –º–æ–¥–µ–ª—å—é –∏–≥—Ä—ã  
   }

   @IBAction func touchShowHint(_ sender: Any) {  
       if !game.isHintUsed {  ¬†// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∞ —Ä–∞–Ω–µ–µ  
           game.useHint()  ¬†// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É  
           game.flipAllCardsFaceUp()  ¬†// –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç—ã –ª–∏—Ü–æ–º –≤–≤–µ—Ä—Ö  
           updateViewFromModel()  ¬†// –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ  

           hintTimer = Timer.scheduledTimer(withTimeInterval: 1.0, repeats: false) { timer in   
               self.game.flipAllCardsFaceDown()  ¬†// –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç—ã –æ–±—Ä–∞—Ç–Ω–æ –≤–Ω–∏–∑   
               self.updateViewFromModel()  ¬†// –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ   
               timer.invalidate()  ¬†// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä   
           }   
       }  

       hintButton.layer.backgroundColor =
           #colorLiteral(red :0.8039215803 , green :0.8039215803 , blue :0.8039215803 , alpha :1)   
   }

   @IBAction private func touchShuffleCards(_ sender: UIButton) {  
       game.shuffleCards()  ¬†// –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∫–∞—Ä—Ç—ã   
       updateViewFromModel()  ¬†// –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ   
   }

   @IBAction private func touchCard(_ sender: UIButton) {  
       flipCount += 1  ¬†// –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç  

       if let cardNumber = cardButtons.firstIndex(of: sender) {   
           game.chooseCard(at: cardNumber)  ¬†// –í—ã–±–∏—Ä–∞–µ–º –∫–∞—Ä—Ç—É –ø–æ –∏–Ω–¥–µ–∫—Å—É   
           updateViewFromModel()  ¬†// –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ   
       } else {   
           print("chosen card was not in cardButtons")   
       }   
   }

   private func updateViewFromModel() {
        emojiChoices = currentTheme.emojis
        if cardButtons != nil {
            for index in cardButtons.indices {
                let button = cardButtons[index]     ¬†// –ü–æ–ª—É—á–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ –∏–Ω–¥–µ–∫—Å—É –∏–∑ –º–∞—Å—Å–∏–≤–∞
            
                let card = game.cards[index]     ¬†// –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç—É –ø–æ –∏–Ω–¥–µ–∫—Å—É –∏–∑ –º–æ–¥–µ–ª–∏ –∏–≥—Ä—ã
            
                if card.isFaceUp {
                    button.setTitle(emoji(for: card), for: UIControl.State.normal)     ¬†// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —ç–º–æ–¥–∑–∏ –∫–∞—Ä—Ç—ã –Ω–∞ –∫–Ω–æ–ø–∫–µ
            
                    button.backgroundColor =
                      #colorLiteral(red :1.0 , green :1.0 , blue :1.0 , alpha :1.0)     ¬†// –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –Ω–∞ –±–µ–ª—ã–π –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–µ –∫–∞—Ä—Ç—ã –≤–≤–µ—Ä—Ö
            
                } else {
                    button.setTitle("", for: UIControl.State.normal)     ¬†// –û—á–∏—â–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –∫–∞—Ä—Ç–∞ –Ω–µ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∞
            
                    button.backgroundColor =
                        card.isMatched ? #colorLiteral(red :1 , green :1 , blue :1 , alpha :0)
                        : currentTheme.cardColor     ¬†// –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –Ω–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π, –µ—Å–ª–∏ –∫–∞—Ä—Ç–∞ —Å–æ–≤–ø–∞–ª–∞, –∏–ª–∏ –Ω–∞ —Ü–≤–µ—Ç —Ç–µ–º—ã, –µ—Å–ª–∏ –Ω–µ—Ç
            
                }
            }
            scoreCountLabel.text =
                " Score : \(game.score)"     ¬†// –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –º–µ—Ç–∫–∏ —Å—á—ë—Ç—á–∏–∫–∞ –æ—á–∫–æ–≤
        
        }
    }
      
    
    
   // –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–∞—Ä—Ç—ã
    private func emoji(for card: Card) -> String {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —ç–º–æ–¥–∑–∏
    if emoji[card] == nil, emojiChoices.count > 0 {
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ —ç–º–æ–¥–∑–∏ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
            let randomStringIndex = emojiChoices.index(emojiChoices.startIndex, offsetBy: emojiChoices. count.arc4random)
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ —É–¥–∞–ª—è–µ–º –µ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç–º–æ–¥–∑–∏
            emoji[card] = String(emojiChoices.remove(at: randomStringIndex))
        }
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–ª–∏ –∑–Ω–∞–∫ –≤–æ–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ —ç–º–æ–¥–∑–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        return emoji[card] ?? "?" // –ï—Å–ª–∏ —ç–º–æ–¥–∑–∏ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–Ω–∞–∫ –≤–æ–ø—Ä–æ—Å–∞
    }

}

extension Int {
    // –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
    var arc4random: Int {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±–æ–ª—å—à–µ –ª–∏ —á–∏—Å–ª–æ –Ω—É–ª—è
        if self > 0 {
            return Int(arc4random_uniform(UInt32(self))) // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ self
        } else if self < 0 {
            return -Int(arc4random_uniform(UInt32(abs(self)))) // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ
        } else {
            return 0 // –ï—Å–ª–∏ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ –Ω—É–ª—é, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 0
        }
    }
}
